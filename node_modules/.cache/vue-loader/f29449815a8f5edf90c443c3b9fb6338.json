{"remainingRequest":"/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mttest/Profile/mac-drive-web/src/views/index.vue?vue&type=style&index=0&id=a83bd3b0&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/mttest/Profile/mac-drive-web/src/views/index.vue","mtime":1702879980736},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhvbWUgewogIC8vIOS9v+eUqGZsZXjluIPlsYAg6I+c5Y2V5bGF5bem5Zu65a6a5a695bqmIOWPs+S+p+WGheWuueWMuuWfn+iHqumAguW6lOWuveW6pgogIGJhY2tncm91bmQtY29sb3I6ICNlZWYwZjQ7CiAgZGlzcGxheTogZmxleDsKICBtYXJnaW46IDA7CiAgcGFkZGluZzogMDsKICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsKCiAgLmhvbWUtbGVmdCB7CiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogIH0KCiAgLmhvbWUtcmlnaHQgewogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgIHdpZHRoOiBjYWxjKDEwMHZoIC0gMjIwcHgpOwogICAgcGFkZGluZy1sZWZ0OiAyMHB4OwogICAgcGFkZGluZy1yaWdodDogMjBweDsKICAgIHBhZGRpbmctYm90dG9tOiAxMDBweDsKICAgIGZsZXg6IDE7CgogICAgLm9wZXJhdGlvbi13cmFwcGVyIHsKICAgICAgcGFkZGluZy10b3AgMTBweAogICAgICBtYXJnaW4tYm90dG9tOiAxNnB4OwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CgogICAgICAvLyDlt6bkvqfoj5zljZXmjInpkq7nu4Qg5qC35byP6LCD5pW0CiAgICAgID4+PiAub3BlcmF0aW9uLW1lbnUtd3JhcHBlciB7CiAgICAgICAgZmxleDogMTsKICAgICAgfQogICAgfQoKICAgIC5yaWdodC1tYWluIHsKICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXMgMTVweAogICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzIDE1cHgKICAgICAgcGFkZGluZy1yaWdodCAxMHB4CiAgICAgIHBhZGRpbmctbGVmdCAxMHB4CiAgICAgIGJhY2tncm91bmQtY29sb3Igd2hpdGUKICAgICAgaGVpZ2h0IGNhbGMoMTAwdmggLSAxMzBweCkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <!-- Left menu - Distinguish file types -->\n    <SideMenu class=\"home-left\" :storageValue=\"storageValue\"></SideMenu>\n    <!-- Right content area -->\n    <div class=\"home-right\">\n      <UserHeader style=\"height: 40px\" :user=\"user\"></UserHeader>\n      <!-- Breadcrumb navigation bar -->\n      <BreadCrumb :fileType=\"fileType\" style=\"height: 30px\"></BreadCrumb>\n      <router-view />\n      <div class=\"right-main\" v-if=\"this.$route.path === '/index'\">\n        <div class=\"operation-wrapper\">\n          <OperationMenu\n            :fileType=\"fileType\"\n            :filePath=\"filePath\"\n            @getTableData=\"getFileData\"\n            @handleUploadFile=\"handleUploadFile\"\n            @handleSelectFile=\"setOperationFile\"\n            @handleMoveFile=\"setMoveFileDialog\"\n            :operationFileList=\"operationFileList\"\n          ></OperationMenu>\n          <FileUploader\n            ref=\"globalUploader\"\n            @getTableData=\"getFileData\"\n          ></FileUploader>\n          <!-- Viewing mode switch component, pass fileType to the child component -->\n          <ShowModel :fileType=\"fileType\"></ShowModel>\n        </div>\n        <!-- File table display area -->\n        <FileTable\n          v-if=\"showModel === 0\"\n          :tableData=\"tableData\"\n          :fileType=\"fileType\"\n          :loading=\"loading\"\n          @getTableData=\"getFileData\"\n          @handleSelectFile=\"setOperationFile\"\n          @handleMoveFile=\"setMoveFileDialog\"\n        ></FileTable>\n        <FileGrid\n          v-if=\"showModel === 1\"\n          :tableData=\"tableData\"\n          :loading=\"loading\"\n        ></FileGrid>\n        <!-- Pagination component -->\n        <FilePagination\n          style=\"position:absolute; bottom:0;padding-bottom: 20px\"\n          :pageData=\"pageData\"\n          @changePageData=\"changePageData\"\n        ></FilePagination>\n        <!-- Move file modal dialog -->\n        <MoveFileDialog\n          :dialogMoveFile=\"dialogMoveFile\"\n          @setSelectFilePath=\"setSelectFilePath\"\n          @confirmMoveFile=\"confirmMoveFile\"\n          @handleMoveFile=\"setMoveFileDialog\"\n        ></MoveFileDialog>\n        <!-- Streaming file online viewing components -->\n        <ImgReview></ImgReview>\n        <AudioReview></AudioReview>\n        <VideoPlayer></VideoPlayer>\n        <CodeReview></CodeReview>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport SideMenu from \"./components/SideMenu.vue\"; // Import the left menu component\nimport BreadCrumb from \"./components/BreadCrumb.vue\"; // Import the breadcrumb navigation bar\nimport FileTable from \"./components/FileTable.vue\"; // Import the file table display area\nimport FilePagination from \"./components/FilePagination.vue\"; // Import the pagination component\nimport OperationMenu from \"./components/OperationMenu.vue\"; // Import file creation component\nimport ShowModel from \"./components/ShowModel.vue\"; // Import viewing mode switching component\nimport FileGrid from \"./components/FileGrid.vue\"; // Import grid component\nimport MoveFileDialog from \"./components/MoveFileDialog\"; // Import move file component\nimport ImgReview from \"@/components/ImgReview\"; // Image viewing\nimport UserHeader from \"@/views/header/UserHeader\"; // Header\nimport FileUploader from \"./components/FileUploader.vue\"; // File upload component\nimport AudioReview from \"@/components/AudioReview\"; // Audio playback\nimport VideoPlayer from \"@/components/VideoPlayer\"; // Video playback\nimport CodeReview from \"@/components/CodeReview\"; // Code playback\n\nimport axios from \"axios\";\n\nimport {\n  batchMoveFile,\n  getFileByName,\n  getFileListByPath,\n  getFileListByType,\n  getFileStorage,\n  getFileTree,\n  moveFile\n} from \"@/request/file.js\";\n\nexport default {\n  name: \"Home\",\n  components: {\n    VideoPlayer,\n    UserHeader,\n    SideMenu,\n    BreadCrumb,\n    FileTable,\n    FilePagination,\n    OperationMenu,\n    ShowModel,\n    FileGrid,\n    FileUploader,\n    MoveFileDialog,\n    ImgReview,\n    AudioReview,\n    CodeReview\n  },\n  data() {\n    return {\n      user: {}, // User information\n      storageValue: 0, // Storage space usage size\n      loading: false,\n      tableData: [], // File list\n      pageData: {\n        currentPage: 1, // Page number\n        pageCount: 10, // Number of items per page\n        total: 0 // Total count\n      },\n      // Data for the move file modal dialog\n      dialogMoveFile: {\n        visible: false, // Whether the dialog is displayed\n        fileTree: [] // Directory tree\n      },\n      isBatch: false, // Whether it is a batch operation\n      operationFile: {}, // Information of the file operated on individually\n      operationFileList: [], // Information of the files operated on in batch\n      selectFilePath: \"\" // Target path\n    };\n  },\n  computed: {\n    // File type selected in the left menu\n    fileType() {\n      return this.$route.query.fileType\n        ? Number(this.$route.query.fileType)\n        : 0;\n    },\n    // Viewing mode\n    showModel() {\n      return this.$store.getters.showModel;\n    },\n    // Current path\n    filePath() {\n      return this.$route.query.filePath ? this.$route.query.filePath : \"/\";\n    }\n  },\n  watch: {\n    fileType() {\n      this.getFileData(); // Get file list\n    },\n    filePath() {\n      // When selecting all in the left menu, and the file path changes, get the file list again\n      if (this.fileType === 0) {\n        this.getFileData(); // Get file list\n      }\n    }\n  },\n  mounted() {\n    this.getFileData(); // Get file list\n    this.created();\n  },\n  methods: {\n    // Upload file button click event\n    handleUploadFile() {\n      // Trigger the event to open the file upload window in the child component\n      this.$refs.globalUploader.triggerSelectFileClick();\n    },\n    // Get user information\n    created() {\n      axios.get(\"/api/admin/info\").then(resp => {\n        // console.log(resp);\n        this.user = resp;\n        // console.log(this.user);\n      });\n    },\n    // Get file list\n    getFileData() {\n      this.loading = true; // Open table loading status\n      if (this.fileType === 0) {\n        // When 'All' is selected in the left menu, get the file list by path\n        this.loading = false;\n        this.getFileDataByPath();\n      } else {\n        // When a type other than 'All' is selected in the left menu, get the file list by type\n        this.getFileDataByType();\n      }\n      this.getStorageValue(); // Get file storage space\n    },\n    // Get file storage space\n    getStorageValue() {\n      getFileStorage().then(res => {\n        this.storageValue = res.data ? Number(res.data) : 0;\n      });\n    },\n    // Get file list by path\n    getFileDataByPath() {\n      getFileListByPath({\n        filePath: this.filePath, // Pass the current path\n        currentPage: this.pageData.currentPage,\n        pageCount: this.pageData.pageCount\n      }).then(\n        res => {\n          // console.log(res);\n          this.loading = false; // Close table loading status\n          this.tableData = res.data.list; // Assign table data\n          this.pageData.total = res.data.total; // Assign total count to pagination component\n        },\n        error => {\n          this.loading = false;\n          console.log(error);\n        }\n      );\n    },\n    // Get file list by type\n    getFileDataByType() {\n      getFileListByType({\n        fileType: this.fileType, // File type\n        currentPage: this.pageData.currentPage, // Current page number\n        pageCount: this.pageData.pageCount // Number of items per page\n      }).then(\n        res => {\n          this.loading = false; // Close table loading status\n          this.tableData = res.data.list; // Assign table data\n          this.pageData.total = res.data.total; // Assign total count to pagination component\n        },\n        error => {\n          this.loading = false;\n          console.log(error);\n        }\n      );\n    },\n    // Fuzzy search to get file list\n    getFileByName() {\n      getFileByName({\n        fileName: \"7\", // File name\n        currentPage: this.pageData.currentPage, // Current page number\n        pageCount: this.pageData.pageCount // Number of items per page\n      }).then(\n        res => {\n          this.loading = false; // Close table loading status\n          this.tableData = res.data.list; // Assign table data\n          this.pageData.total = res.data.total; // Assign total count to pagination component\n        },\n        error => {\n          this.loading = false;\n          console.log(error);\n        }\n      );\n    },\n    // Pagination component - When page number or items per page change\n    changePageData(pageData) {\n      this.pageData.currentPage = pageData.currentPage; // Assign page number\n      this.pageData.pageCount = pageData.pageCount; // Assign number of items per page\n      this.getFileData(); // Get file list\n    },\n    /**\n     * Set file information for moving files\n     * @param {Boolean} isBatch Whether it is a batch move, true for batch, false for individual file operation\n     * @param {Object | Array} file Information of the file to move, Object for individual operation, Array for batch operation\n     */\n    setOperationFile(isBatch, file) {\n      this.isBatch = isBatch; // Save the operation type\n      if (isBatch) {\n        this.operationFileList = file; // Batch operation files\n      } else {\n        this.operationFile = file; // Individual operation file\n      }\n    },\n    /**\n     * Set data related to the move file dialog\n     * @param {Boolean} visible Open/Close move file modal dialog\n     */\n    setMoveFileDialog(visible) {\n      this.dialogMoveFile.visible = visible; // Open the dialog\n      if (visible) {\n        // When opening the dialog, get the folder directory tree\n        getFileTree().then(res => {\n          if (res.code === 200) {\n            this.dialogMoveFile.fileTree = [res.data];\n          } else {\n            this.$message.error(res.code);\n          }\n        });\n      }\n    },\n    // Set the target path for moving files\n    setSelectFilePath(selectFilePath) {\n      this.selectFilePath = selectFilePath;\n    },\n    // Move file modal dialog - Confirm button event\n    confirmMoveFile() {\n      if (this.isBatch) {\n        // Batch move\n        batchMoveFile({\n          filePath: this.selectFilePath,\n          files: JSON.stringify(this.operationFileList)\n        }).then(res => {\n          if (res.code === 200) {\n            this.getFileData(); // Refresh file list\n            this.dialogMoveFile.visible = false; // Close dialog\n            this.operationFileList = [];\n          } else {\n            this.$message.error(res.message);\n          }\n        });\n      } else {\n        // Single file move\n        moveFile({\n          id: this.operationFile.id, // File ID\n          file_name: this.operationFile.file_name, // File name\n          file_url: this.selectFilePath // Target path\n        }).then(res => {\n          // console.log(res);\n          if (res.code === 200) {\n            this.getFileData(); // Refresh file list\n            this.dialogMoveFile.visible = false; // Close dialog\n          } else {\n            this.$message.error(res.message);\n          }\n        });\n      }\n    }\n  }\n};\n</script>\n\n\n<style lang=\"stylus\" scoped>\n.home {\n  // 使用flex布局 菜单居左固定宽度 右侧内容区域自适应宽度\n  background-color: #eef0f4;\n  display: flex;\n  margin: 0;\n  padding: 0;\n  font-family: Arial, Helvetica, sans-serif;\n\n  .home-left {\n    box-sizing: border-box;\n  }\n\n  .home-right {\n    box-sizing: border-box;\n    width: calc(100vh - 220px);\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-bottom: 100px;\n    flex: 1;\n\n    .operation-wrapper {\n      padding-top 10px\n      margin-bottom: 16px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      // 左侧菜单按钮组 样式调整\n      >>> .operation-menu-wrapper {\n        flex: 1;\n      }\n    }\n\n    .right-main {\n      border-top-right-radius 15px\n      border-top-left-radius 15px\n      padding-right 10px\n      padding-left 10px\n      background-color white\n      height calc(100vh - 130px)\n    }\n  }\n}\n</style>\n"]}]}