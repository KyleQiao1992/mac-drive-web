{"remainingRequest":"/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mttest/Profile/mac-drive-web/src/views/components/BreadCrumb.vue?vue&type=style&index=0&id=6d417cf2&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/mttest/Profile/mac-drive-web/src/views/components/BreadCrumb.vue","mtime":1702869388617},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5icmVhZC1jcnVtYi13cmFwcGVyIHsKICBoZWlnaHQ6IDMycHg7CiAgbGluZS1oZWlnaHQ6IDMycHg7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9Cg=="},{"version":3,"sources":["BreadCrumb.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA;AACA","file":"BreadCrumb.vue","sourceRoot":"src/views/components","sourcesContent":["<template>\n  <!-- Breadcrumb -->\n  <div class=\"bread-crumb-wrapper\">\n    <div class=\"current-path\">Current Location:</div>\n    <!-- When viewing files by type -->\n    <el-breadcrumb class=\"bread-crumb\" v-if=\"fileType\" separator=\"/\">\n      <el-breadcrumb-item>{{ fileTypeMap[fileType] }}</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- When viewing files by path -->\n    <el-breadcrumb class=\"bread-crumb\" v-else separator=\"/\">\n      <!-- When clicking on a level in the breadcrumb navigation bar, change the route -->\n      <el-breadcrumb-item\n        v-for=\"(item, index) in breadCrumbList\"\n        :key=\"index\"\n        :to=\"{ query: { fileType: 0, filePath :  item.path } }\"\n      > {{ item.name }}\n      </el-breadcrumb-item\n      >\n    </el-breadcrumb>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"BreadCrumb\",\n  props: {\n    fileType: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      fileTypeMap: {\n        1: \"Image\",\n        2: \"Documents\",\n        3: \"Videos\",\n        4: \"Music\",\n        5: \"Compressed\",\n        6: \"Others\",\n        8: \"Recycle Bin\",\n        9: \"My Shares\"\n      }\n    };\n  },\n  computed: {\n    // When viewing by path, the breadcrumb data split from the current path\n    breadCrumbList() {\n      let path = this.$route.query.filePath;\n      let pathList = path ? path.split(\"/\").slice(1, -1) : []; // Path list, take the second to the second-to-last, as the first and last array items are empty strings\n      let res = [{ name: \"All Files\", path: \"/\" }];\n      pathList.forEach((element, index) => {\n        res.push({\n          name: element,\n          path: `${res[index].path}${element}/`\n        });\n      });\n      return res;\n    }\n  }\n};\n</script>\n\n<style lang=\"stylus\" scoped>\n.bread-crumb-wrapper {\n  height: 32px;\n  line-height: 32px;\n  display: flex;\n  align-items: center;\n}\n</style>\n"]}]}