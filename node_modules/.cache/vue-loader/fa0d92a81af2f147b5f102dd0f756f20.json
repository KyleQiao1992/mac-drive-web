{"remainingRequest":"/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mttest/Profile/mac-drive-web/src/views/components/OperationMenu.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/mttest/Profile/mac-drive-web/src/views/components/OperationMenu.vue","mtime":1701827905865},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaW1nLXRleHQtd3JhcHBlciB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9Ci5pbWdEIHsKICBtYXJnaW4tcmlnaHQ6IDRweDsKICBoZWlnaHQ6IDMwcHg7Cn0KLmltZ1MgewogIG1hcmdpbi1yaWdodDogNHB4OwogIGhlaWdodDogMjNweDsKfQouY3JlYXRlLWRyb3AgewogIGZsb2F0OiBsZWZ0Owp9Cg=="},{"version":3,"sources":["OperationMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OperationMenu.vue","sourceRoot":"src/views/components","sourcesContent":["<template>\n  <div class=\"operation-menu-wrapper\">\n    <!-- 按钮组 -->\n    <el-button-group class=\"operate-group\">\n      <el-dropdown class=\"create-drop\" trigger=\"hover\" v-if=\"fileType < 7\">\n        <el-button\n          size=\"mini\"\n          type=\"primary\"\n          :disabled=\"fileType !== 0\"\n          icon=\"el-icon-plus\"\n          >新建<i class=\"el-icon-arrow-down el-icon--right\"></i\n        ></el-button>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item @click.native=\"addFolderDialog.visible = true\">\n            <div class=\"img-text-wrapper\">\n              <img src=\"../../assets/images/file/dir.png\" class=\"imgD\" />\n              新建文件夹\n            </div>\n          </el-dropdown-item>\n          <hr color=\"#eee\" style=\"width: 120px\" />\n          <el-dropdown-item>\n            <div class=\"img-text-wrapper\">\n              <img\n                src=\"../../assets/images/file/file_word.svg\"\n                class=\"imgS\"\n              />Word 文档\n            </div>\n          </el-dropdown-item>\n          <el-dropdown-item>\n            <div class=\"img-text-wrapper\">\n              <img\n                src=\"../../assets/images/file/file_excel.svg\"\n                class=\"imgS\"\n              />Excel 表格\n            </div>\n          </el-dropdown-item>\n          <el-dropdown-item>\n            <div class=\"img-text-wrapper\">\n              <img\n                src=\"../../assets/images/file/file_ppt.svg\"\n                class=\"imgS\"\n              />PPT 演示文稿\n            </div>\n          </el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n      <el-button\n        size=\"mini\"\n        type=\"primary\"\n        icon=\"el-icon-upload2\"\n        @click=\"handleUploadFileClick()\"\n        :disabled=\"fileType !== 0\"\n        v-if=\"fileType < 7\"\n        >上传文件</el-button\n      >\n\n      <el-button\n        size=\"mini\"\n        type=\"primary\"\n        icon=\"el-icon-upload2\"\n        @click=\"handleEmptyTrash()\"\n        v-if=\"fileType === 8\"\n        >清空回收站</el-button\n      >\n      <el-button\n        size=\"mini\"\n        type=\"primary\"\n        icon=\"el-icon-upload2\"\n        @click=\"handleRestoreTrash()\"\n        v-if=\"fileType === 8\"\n        >还原回收站</el-button\n      >\n\n      <template v-if=\"operationFileList.length && fileType < 7\">\n        <el-button\n          size=\"mini\"\n          type=\"primary\"\n          icon=\"el-icon-delete\"\n          @click=\"handleDeleteFileClick()\"\n          >删除</el-button\n        >\n        <!-- disabled 当表格勾选项为空时，禁用移动按钮 | v-if 当左侧菜单选择全部时，才显示移动按钮 -->\n        <el-button\n          size=\"mini\"\n          type=\"primary\"\n          icon=\"el-icon-rank\"\n          :disabled=\"fileType !== 0\"\n          @click=\"handleMoveFileClick()\"\n          >移动</el-button\n        >\n        <!-- disabled 当表格勾选项为空时，禁用下载按钮 -->\n        <el-button\n          size=\"mini\"\n          type=\"primary\"\n          icon=\"el-icon-download\"\n          @click=\"handleDownloadFileClick()\"\n          >下载</el-button\n        >\n      </template>\n      <template v-if=\"operationFileList.length && fileType === 8\">\n        <el-button\n          size=\"mini\"\n          type=\"primary\"\n          icon=\"el-icon-delete\"\n          @click=\"handleEmptyFilesBatch()\"\n          >彻底删除</el-button\n        >\n        <el-button\n          size=\"mini\"\n          type=\"primary\"\n          icon=\"el-icon-delete\"\n          @click=\"handRestoreFilesBatch()\"\n          >批量还原</el-button\n        >\n      </template>\n    </el-button-group>\n\n    <!-- 对话框 - 新建文件夹 -->\n    <!-- @closed 对话框关闭动画结束时 重置表单并清空所有表单校验 -->\n    <el-dialog\n      title=\"新建文件夹\"\n      width=\"600px\"\n      :visible.sync=\"addFolderDialog.visible\"\n      @closed=\"$refs.addFolderForm.resetFields()\"\n    >\n      <el-form\n        :model=\"addFolderForm\"\n        :rules=\"addFolderRules\"\n        label-position=\"top\"\n        ref=\"addFolderForm\"\n      >\n        <el-form-item label=\"文件夹名称\" prop=\"name\">\n          <el-input v-model=\"addFolderForm.name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addFolderDialog.visible = false\">取 消</el-button>\n        <el-button\n          type=\"primary\"\n          :loading=\"addFolderDialog.loading\"\n          @click=\"handleAddFolderSubmit('addFolderForm')\"\n          >提 交</el-button\n        >\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  batchDeleteFile,\n  batchEmptyFile,\n  batchRestoreFile,\n  getEmptyTrash,\n  getRestoreTrash,\n  makerDir\n} from \"@/request/file\";\n\nexport default {\n  name: \"OperationMenu\",\n  props: {\n    // 文件类型\n    fileType: {\n      type: Number,\n      required: true\n    },\n    // 文件路径\n    filePath: {\n      type: String,\n      required: true\n    },\n    // 表格行已选项\n    operationFileList: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      // 新建文件夹对话框数据\n      addFolderDialog: {\n        visible: false, //  对话框显隐状态\n        loading: false\n      },\n      // 新建文件夹表单\n      addFolderForm: {\n        name: \"\"\n      },\n      // 新建文件夹表单校验规则\n      addFolderRules: {\n        name: [\n          {\n            required: true,\n            message: \"请输入文件夹名称\",\n            trigger: \"blur, change\"\n          }\n        ]\n      }\n    };\n  },\n  methods: {\n    // 新建文件夹对话框 - 提交按钮\n    handleAddFolderSubmit() {\n      this.$refs.addFolderForm.validate(valid => {\n        if (valid) {\n          this.addFolderDialog.loading = true; //  对话框的确定按钮打开loading状态\n          // 表单校验通过 - 调用新建文件夹接口\n          makerDir({\n            fileName: this.addFolderForm.name,\n            filePath: this.filePath //  文件路径\n            // IsDir: 1 //  是否为文件夹：1 表示文件夹 0 表示文件\n          }).then(\n            resp => {\n              console.log(resp);\n              this.addFolderDialog.loading = false; //  对话框的确定按钮关闭loading状态\n              if (resp.code === 200) {\n                this.addFolderDialog.visible = false; //  关闭对话框\n                this.$emit(\"getTableData\"); // 重新获取文件列表\n              } else {\n                this.$message.warning(resp.message);\n              }\n            },\n            error => {\n              this.addFolderDialog.loading = false; //  对话框的确定按钮关闭loading状态\n              console.log(error);\n            }\n          );\n        } else {\n          return false;\n        }\n      });\n    },\n    // 上传文件按钮 - 点击事件\n    handleUploadFileClick() {\n      this.$emit(\"handleUploadFile\", true);\n    },\n    // 批量删除文件按钮\n    handleDeleteFileClick() {\n      // 消息弹框提示用户\n      this.$confirm(\n        \"此操作将删除选中文件, 但你依然可以在回收站找到它，是否继续?\",\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      )\n        .then(() => {\n          // 确定按钮 点击事件 调用批量删除文件接口\n          batchDeleteFile({\n            files: JSON.stringify(this.operationFileList),\n            filePath: \"/\"\n          }).then(res => {\n            if (res.code === 200) {\n              this.$emit(\"getTableData\"); //  刷新文件列表\n            } else {\n              this.$message.error(\"失败\" + res.message);\n            }\n          });\n        })\n        .catch(() => {\n          //  取消\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除\"\n          });\n        });\n    },\n    // 移动文件按钮 - 点击事件\n    handleMoveFileClick() {\n      // true/false 批量移动/单文件操作 | this.operationFileList 当前行文件数据\n      this.$emit(\"handleSelectFile\", true, this.operationFileList);\n      this.$emit(\"handleMoveFile\", true); // true/false 打开/关闭移动文件对话框\n    },\n    // 清空回收站\n    handleEmptyTrash() {\n      this.$confirm(\"此操作将清空回收站，是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          // 确定按钮 点击事件 调用批量删除文件接口\n          getEmptyTrash({}).then(res => {\n            if (res.code === 200) {\n              this.$emit(\"getTableData\"); //  刷新文件列表\n            } else {\n              this.$message.error(\"失败\" + res.message);\n            }\n          });\n        })\n        .catch(() => {\n          //  取消\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除\"\n          });\n        });\n    },\n    // 还原回收站\n    handleRestoreTrash() {\n      this.$confirm(\"此操作将还原回收站，是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          // 确定按钮 点击事件 调用批量删除文件接口\n          getRestoreTrash({}).then(res => {\n            if (res.code === 200) {\n              this.$emit(\"getTableData\"); //  刷新文件列表\n            } else {\n              this.$message.error(\"失败\" + res.message);\n            }\n          });\n        })\n        .catch(() => {\n          //  取消\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除\"\n          });\n        });\n    },\n    // 彻底删除\n    handleEmptyFilesBatch() {\n      this.$confirm(\"此操作将彻底删除选中文件，是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          // 确定按钮 点击事件 调用批量删除文件接口\n          batchEmptyFile({\n            files: JSON.stringify(this.operationFileList),\n            filePath: \"/\"\n          }).then(res => {\n            if (res.code === 200) {\n              this.$emit(\"getTableData\"); //  刷新文件列表\n            } else {\n              this.$message.error(\"失败\" + res.message);\n            }\n          });\n        })\n        .catch(() => {\n          //  取消\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除\"\n          });\n        });\n    },\n    // 批量还原\n    handRestoreFilesBatch() {\n      batchRestoreFile({\n        files: JSON.stringify(this.operationFileList),\n        filePath: \"/\"\n      }).then(res => {\n        if (res.code === 200) {\n          this.$emit(\"getTableData\"); //  刷新文件列表\n        } else {\n          this.$message.error(\"失败\" + res.message);\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.img-text-wrapper {\n  display: flex;\n  align-items: center;\n}\n.imgD {\n  margin-right: 4px;\n  height: 30px;\n}\n.imgS {\n  margin-right: 4px;\n  height: 23px;\n}\n.create-drop {\n  float: left;\n}\n</style>\n"]}]}