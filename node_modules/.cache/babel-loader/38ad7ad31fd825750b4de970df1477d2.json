{"remainingRequest":"/Users/mttest/Profile/mac-drive-web/node_modules/babel-loader/lib/index.js!/Users/mttest/Profile/mac-drive-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mttest/Profile/mac-drive-web/src/views/components/BreadCrumb.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mttest/Profile/mac-drive-web/src/views/components/BreadCrumb.vue","mtime":1702869388617},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQnJlYWRDcnVtYiIsCiAgcHJvcHM6IHsKICAgIGZpbGVUeXBlOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlVHlwZU1hcDogewogICAgICAgIDE6ICJJbWFnZSIsCiAgICAgICAgMjogIkRvY3VtZW50cyIsCiAgICAgICAgMzogIlZpZGVvcyIsCiAgICAgICAgNDogIk11c2ljIiwKICAgICAgICA1OiAiQ29tcHJlc3NlZCIsCiAgICAgICAgNjogIk90aGVycyIsCiAgICAgICAgODogIlJlY3ljbGUgQmluIiwKICAgICAgICA5OiAiTXkgU2hhcmVzIgogICAgICB9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIFdoZW4gdmlld2luZyBieSBwYXRoLCB0aGUgYnJlYWRjcnVtYiBkYXRhIHNwbGl0IGZyb20gdGhlIGN1cnJlbnQgcGF0aAogICAgYnJlYWRDcnVtYkxpc3Q6IGZ1bmN0aW9uIGJyZWFkQ3J1bWJMaXN0KCkgewogICAgICB2YXIgcGF0aCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmZpbGVQYXRoOwogICAgICB2YXIgcGF0aExpc3QgPSBwYXRoID8gcGF0aC5zcGxpdCgiLyIpLnNsaWNlKDEsIC0xKSA6IFtdOyAvLyBQYXRoIGxpc3QsIHRha2UgdGhlIHNlY29uZCB0byB0aGUgc2Vjb25kLXRvLWxhc3QsIGFzIHRoZSBmaXJzdCBhbmQgbGFzdCBhcnJheSBpdGVtcyBhcmUgZW1wdHkgc3RyaW5ncwoKICAgICAgdmFyIHJlcyA9IFt7CiAgICAgICAgbmFtZTogIkFsbCBGaWxlcyIsCiAgICAgICAgcGF0aDogIi8iCiAgICAgIH1dOwogICAgICBwYXRoTGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50LCBpbmRleCkgewogICAgICAgIHJlcy5wdXNoKHsKICAgICAgICAgIG5hbWU6IGVsZW1lbnQsCiAgICAgICAgICBwYXRoOiAiIi5jb25jYXQocmVzW2luZGV4XS5wYXRoKS5jb25jYXQoZWxlbWVudCwgIi8iKQogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgcmV0dXJuIHJlczsKICAgIH0KICB9Cn07"},{"version":3,"sources":["BreadCrumb.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,WAAA,EAAA;AACA,WAAA,OADA;AAEA,WAAA,WAFA;AAGA,WAAA,QAHA;AAIA,WAAA,OAJA;AAKA,WAAA,YALA;AAMA,WAAA,QANA;AAOA,WAAA,aAPA;AAQA,WAAA;AARA;AADA,KAAA;AAYA,GArBA;AAsBA,EAAA,QAAA,EAAA;AACA;AACA,IAAA,cAFA,4BAEA;AACA,UAAA,IAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA;AACA,UAAA,QAAA,GAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAFA,CAEA;;AACA,UAAA,GAAA,GAAA,CAAA;AAAA,QAAA,IAAA,EAAA,WAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,CAAA;AACA,MAAA,QAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA,KAAA,EAAA;AACA,QAAA,GAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,IAAA,YAAA,GAAA,CAAA,KAAA,CAAA,CAAA,IAAA,SAAA,OAAA;AAFA,SAAA;AAIA,OALA;AAMA,aAAA,GAAA;AACA;AAbA;AAtBA,CAAA","sourcesContent":["<template>\n  <!-- Breadcrumb -->\n  <div class=\"bread-crumb-wrapper\">\n    <div class=\"current-path\">Current Location:</div>\n    <!-- When viewing files by type -->\n    <el-breadcrumb class=\"bread-crumb\" v-if=\"fileType\" separator=\"/\">\n      <el-breadcrumb-item>{{ fileTypeMap[fileType] }}</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- When viewing files by path -->\n    <el-breadcrumb class=\"bread-crumb\" v-else separator=\"/\">\n      <!-- When clicking on a level in the breadcrumb navigation bar, change the route -->\n      <el-breadcrumb-item\n        v-for=\"(item, index) in breadCrumbList\"\n        :key=\"index\"\n        :to=\"{ query: { fileType: 0, filePath :  item.path } }\"\n      > {{ item.name }}\n      </el-breadcrumb-item\n      >\n    </el-breadcrumb>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"BreadCrumb\",\n  props: {\n    fileType: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      fileTypeMap: {\n        1: \"Image\",\n        2: \"Documents\",\n        3: \"Videos\",\n        4: \"Music\",\n        5: \"Compressed\",\n        6: \"Others\",\n        8: \"Recycle Bin\",\n        9: \"My Shares\"\n      }\n    };\n  },\n  computed: {\n    // When viewing by path, the breadcrumb data split from the current path\n    breadCrumbList() {\n      let path = this.$route.query.filePath;\n      let pathList = path ? path.split(\"/\").slice(1, -1) : []; // Path list, take the second to the second-to-last, as the first and last array items are empty strings\n      let res = [{ name: \"All Files\", path: \"/\" }];\n      pathList.forEach((element, index) => {\n        res.push({\n          name: element,\n          path: `${res[index].path}${element}/`\n        });\n      });\n      return res;\n    }\n  }\n};\n</script>\n\n<style lang=\"stylus\" scoped>\n.bread-crumb-wrapper {\n  height: 32px;\n  line-height: 32px;\n  display: flex;\n  align-items: center;\n}\n</style>\n"],"sourceRoot":"src/views/components"}]}