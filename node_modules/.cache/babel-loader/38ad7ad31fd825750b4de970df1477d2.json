{"remainingRequest":"/Users/mttest/Profile/mac-drive-web/node_modules/babel-loader/lib/index.js!/Users/mttest/Profile/mac-drive-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mttest/Profile/mac-drive-web/src/views/components/BreadCrumb.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mttest/Profile/mac-drive-web/src/views/components/BreadCrumb.vue","mtime":1701827905863},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mttest/Profile/mac-drive-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQnJlYWRDcnVtYiIsCiAgcHJvcHM6IHsKICAgIGZpbGVUeXBlOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlVHlwZU1hcDogewogICAgICAgIDE6ICLlhajpg6jlm77niYciLAogICAgICAgIDI6ICLlhajpg6jmlofmoaMiLAogICAgICAgIDM6ICLlhajpg6jop4bpopEiLAogICAgICAgIDQ6ICLlhajpg6jpn7PkuZAiLAogICAgICAgIDU6ICLljovnvKnmlofku7YiLAogICAgICAgIDY6ICLlhbbku5YiLAogICAgICAgIDg6ICLlm57mlLbnq5kiLAogICAgICAgIDk6ICLmiJHnmoTliIbkuqsiCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgLy8g5L6d5o2u6Lev5b6E5p+l55yL5pe2IOW9k+WJjei3r+W+hOaLhuWIhueahOmdouWMheWxkeaVsOaNrgogICAgYnJlYWRDcnVtYkxpc3Q6IGZ1bmN0aW9uIGJyZWFkQ3J1bWJMaXN0KCkgewogICAgICB2YXIgcGF0aCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmZpbGVQYXRoOwogICAgICB2YXIgcGF0aExpc3QgPSBwYXRoID8gcGF0aC5zcGxpdCgiLyIpLnNsaWNlKDEsIC0xKSA6IFtdOyAvLyDot6/lvoTliJfooajvvIzlj5bnrKzkuozkuKogfiDlgJLmlbDnrKzkuozkuKrvvIzlm6DkuLrnrKzkuIDkuKrlkozmnIDlkI7kuIDkuKrmlbDnu4Tpobnpg73mmK/nqbrlrZfnrKbkuLIKCiAgICAgIHZhciByZXMgPSBbewogICAgICAgIG5hbWU6ICLlhajpg6jmlofku7YiLAogICAgICAgIHBhdGg6ICIvIgogICAgICB9XTsKICAgICAgcGF0aExpc3QuZm9yRWFjaChmdW5jdGlvbiAoZWxlbWVudCwgaW5kZXgpIHsKICAgICAgICByZXMucHVzaCh7CiAgICAgICAgICBuYW1lOiBlbGVtZW50LAogICAgICAgICAgcGF0aDogIiIuY29uY2F0KHJlc1tpbmRleF0ucGF0aCkuY29uY2F0KGVsZW1lbnQsICIvIikKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHJldHVybiByZXM7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["BreadCrumb.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,WAAA,EAAA;AACA,WAAA,MADA;AAEA,WAAA,MAFA;AAGA,WAAA,MAHA;AAIA,WAAA,MAJA;AAKA,WAAA,MALA;AAMA,WAAA,IANA;AAOA,WAAA,KAPA;AAQA,WAAA;AARA;AADA,KAAA;AAYA,GArBA;AAsBA,EAAA,QAAA,EAAA;AACA;AACA,IAAA,cAFA,4BAEA;AACA,UAAA,IAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA;AACA,UAAA,QAAA,GAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAFA,CAEA;;AACA,UAAA,GAAA,GAAA,CAAA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,CAAA;AACA,MAAA,QAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA,KAAA,EAAA;AACA,QAAA,GAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,IAAA,YAAA,GAAA,CAAA,KAAA,CAAA,CAAA,IAAA,SAAA,OAAA;AAFA,SAAA;AAIA,OALA;AAMA,aAAA,GAAA;AACA;AAbA;AAtBA,CAAA","sourcesContent":["<template>\n  <!--  面包屑-->\n  <div class=\"bread-crumb-wrapper\">\n    <div class=\"current-path\">当前位置：</div>\n    <!-- 按类型查看文件时 -->\n    <el-breadcrumb class=\"bread-crumb\" v-if=\"fileType\" separator=\"/\">\n      <el-breadcrumb-item>{{ fileTypeMap[fileType] }}</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 按路径查看文件时 -->\n    <el-breadcrumb class=\"bread-crumb\" v-else separator=\"/\">\n      <!-- 当点击面包屑导航栏中的某一级时，改变路由 -->\n      <el-breadcrumb-item\n        v-for=\"(item, index) in breadCrumbList\"\n        :key=\"index\"\n        :to=\"{ query: { fileType: 0, filePath: item.path } }\"\n        >{{ item.name }}</el-breadcrumb-item\n      >\n    </el-breadcrumb>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"BreadCrumb\",\n  props: {\n    fileType: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      fileTypeMap: {\n        1: \"全部图片\",\n        2: \"全部文档\",\n        3: \"全部视频\",\n        4: \"全部音乐\",\n        5: \"压缩文件\",\n        6: \"其他\",\n        8: \"回收站\",\n        9: \"我的分享\"\n      }\n    };\n  },\n  computed: {\n    // 依据路径查看时 当前路径拆分的面包屑数据\n    breadCrumbList() {\n      let path = this.$route.query.filePath;\n      let pathList = path ? path.split(\"/\").slice(1, -1) : []; // 路径列表，取第二个 ~ 倒数第二个，因为第一个和最后一个数组项都是空字符串\n      let res = [{ name: \"全部文件\", path: \"/\" }];\n      pathList.forEach((element, index) => {\n        res.push({\n          name: element,\n          path: `${res[index].path}${element}/`\n        });\n      });\n      return res;\n    }\n  }\n};\n</script>\n\n<style lang=\"stylus\" scoped>\n.bread-crumb-wrapper {\n  height: 32px;\n  line-height: 32px;\n  display: flex;\n  align-items: center;\n}\n</style>\n"],"sourceRoot":"src/views/components"}]}